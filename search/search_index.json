{"config":{"lang":["es"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BanRep: Anal\u00edtica de Texto banrep es una librer\u00eda en Python para analizar conjuntos de documentos textuales. Ofrece las funciones usadas recurrentemente en el Banco de la Rep\u00fablica para el preprocesamiento y an\u00e1lisis de texto. \ud83d\udcd6C\u00f3mo usar Instalaci\u00f3n C\u00f3mo instalar en su equipo Extracci\u00f3n C\u00f3mo usar para extracci\u00f3n de texto en documentos Uso general Funcionalidad principal de la librer\u00eda","title":"Gu\u00eda"},{"location":"#banrep-analitica-de-texto","text":"banrep es una librer\u00eda en Python para analizar conjuntos de documentos textuales. Ofrece las funciones usadas recurrentemente en el Banco de la Rep\u00fablica para el preprocesamiento y an\u00e1lisis de texto.","title":"BanRep: Anal\u00edtica de Texto"},{"location":"instalacion/","text":"Instalaci\u00f3n Se requiere tener instalado Python 3.7 . Si es la primera vez que va a instalar este lenguaje de programaci\u00f3n, se recomienda instalarlo usando Anaconda3 o Miniconda3 . Siga las instrucciones de instalaci\u00f3n para su sistema. Uso de entorno virtual Se recomienda instalar banrep en un entorno virtual para no interferir con otras instalaciones de python. Tanto Anaconda como Miniconda instalan un programa llamado conda , para crear y activar un entorno virtual que instale pip . Desde la l\u00ednea de comandos ( Terminal en macOS, Anaconda Prompt en windows): # crear un entorno... ~$ conda create --name entorno python = 3 .7 pip jupyterlab # confirmar que quiere descargar lo solicitado... Proceed ([ y ] /n ) ? y # activar el entorno creado... ~$ conda activate entorno pip Una vez activado el entorno, instalar banrep usando pip . Esto instalar\u00e1 autom\u00e1ticamente las librer\u00edas que se requieren. ~$ pip install --upgrade banrep Modelo de Lenguaje Natural Se requiere un modelo pre-entrenado de Spacy , que depende del idioma del texto que se quiera procesar. Existen diversas formas de instalar, la m\u00e1s f\u00e1cil es usando download . ~$ python -m spacy download es_core_news_md Cuando se piensa usar el mismo modelo para diferentes proyectos, una alternativa es hacer una instalaci\u00f3n manual : descargar el archivo del modelo , guardarlo en el directorio deseado, y crear un v\u00ednculo simb\u00f3lico a dicho modelo. Verificar instalaci\u00f3n Puede verificar si banrep instal\u00f3 correctamente usando python o jupyter lab desde la l\u00ednea de comandos: ~$ python >>> from banrep.linguistica import Documentos >>> Si no aparece ning\u00fan error quiere decir que la instalaci\u00f3n fue exitosa. Sobre JupyterLab Si quiere obtener mayor informaci\u00f3n sobre el uso de JupyterLab puede consultar su documentaci\u00f3n","title":"Instalaci\u00f3n"},{"location":"instalacion/#instalacion","text":"Se requiere tener instalado Python 3.7 . Si es la primera vez que va a instalar este lenguaje de programaci\u00f3n, se recomienda instalarlo usando Anaconda3 o Miniconda3 . Siga las instrucciones de instalaci\u00f3n para su sistema. Uso de entorno virtual Se recomienda instalar banrep en un entorno virtual para no interferir con otras instalaciones de python. Tanto Anaconda como Miniconda instalan un programa llamado conda , para crear y activar un entorno virtual que instale pip . Desde la l\u00ednea de comandos ( Terminal en macOS, Anaconda Prompt en windows): # crear un entorno... ~$ conda create --name entorno python = 3 .7 pip jupyterlab # confirmar que quiere descargar lo solicitado... Proceed ([ y ] /n ) ? y # activar el entorno creado... ~$ conda activate entorno","title":"Instalaci\u00f3n"},{"location":"uso_extraccion/","text":"Extraer texto de documentos Una necesidad com\u00fan para analizar texto es poder extraerlo de archivos pdf, word, powerpoint o similares, que usualmente est\u00e1n almacenados en una carpeta en disco. Uso de entorno virtual Para usar banrep se recomienda hacerlo dentro de un entorno virtual. Puede ver la secci\u00f3n de instalaci\u00f3n para instrucciones sobre c\u00f3mo crearlo y activarlo. Uso de Apache Tika La extracci\u00f3n de texto hace uso de Apache Tika Server , una reconocida librer\u00eda de Java. El uso de los comandos de extracci\u00f3n que se muestran en esta p\u00e1gina asume que se cuenta con una copia de dicha librer\u00eda. Si no se tiene, autom\u00e1ticamente se descargar\u00e1 una copia , y por tanto se requiere acceso a internet y la posibilidad de descargar ejecutables. L\u00ednea de comandos Con su entorno virtual activado , desde la l\u00ednea de comandos puede extraer el texto de cada archivo que tenga guardado en una carpeta, y almacenarlo en un nuevo archivo .txt que ser\u00e1 guardado en una nueva carpeta. # En este ejemplo tiene documentos en carpeta ~/Downloads/pubs/ # Textos ser\u00e1n almacenado en ~Downloads/corpus/ # Ejemplo asume directorio de trabajo ser\u00e1 ~Downloads/ ~$ cd Downloads/ ~/Downloads$ python -m banrep.extraccion pubs corpus --recursivo --exts pdf --chars 5 --basura '_<>#!' --basura '\\*' --basura \ufffd Directorios de entrada y salida son requeridos ( pubs y corpus en este ejemplo). Si se incluye el flag --recursivo se extrae texto de subdirectorios. La opci\u00f3n --exts permite especificar extensiones de archivos a procesar. Esta no es obligatoria, pero sirve para cuando tiene otro tipo de archivos en la misma carpeta que no quiere procesar. La opci\u00f3n --chars permite determinar un n\u00famero m\u00ednimo de caracteres que debe tener una l\u00ednea de texto. La opci\u00f3n --basura permite especificar caracteres que se quiere eliminar del texto. Esto usa regular expressions , as\u00ed que caracteres especiales como asterisco (*) deben escribirse con backslash (\\) . Librer\u00eda Para importar en python y usar las funciones individualmente: from banrep.io import guardar_texto from banrep.extraccion import extraer_info , extraer_todos , procesar_xhtml # Extrae el texto y metadata de pdf. contenido , metadata = extraer_info ( 'mi-super-archivo.pdf' ) # Procesa el texto para limpiarlo # Puede incluir caracteres `basura` a eliminar, y m\u00ednima longitud `chars`. texto = procesar_xhtml ( contenido , basura = None , chars = 0 ) # Guarda el texto extra\u00eddo. guardar_texto ( texto , 'mi-super-archivo.txt' ) # Extrae texto de archivos en un directorio # y almacena nuevos archivos en carpeta textos. # Devuelve el n\u00famero de archivos procesados. n = extraer_todos ( 'Downloads/pubs/' , 'Downloads/corpus/' , recursivo = True , exts = None , basura = None , chars = 0 ) print ( f ' {n} archivos procesados' ) Ayuda Para ayuda sobre las funciones disponibles, desde python puede usar help . ~$ python >>> from banrep import extraccion >>> help ( extraccion )","title":"Extraer texto de documentos"},{"location":"uso_extraccion/#extraer-texto-de-documentos","text":"Una necesidad com\u00fan para analizar texto es poder extraerlo de archivos pdf, word, powerpoint o similares, que usualmente est\u00e1n almacenados en una carpeta en disco. Uso de entorno virtual Para usar banrep se recomienda hacerlo dentro de un entorno virtual. Puede ver la secci\u00f3n de instalaci\u00f3n para instrucciones sobre c\u00f3mo crearlo y activarlo. Uso de Apache Tika La extracci\u00f3n de texto hace uso de Apache Tika Server , una reconocida librer\u00eda de Java. El uso de los comandos de extracci\u00f3n que se muestran en esta p\u00e1gina asume que se cuenta con una copia de dicha librer\u00eda. Si no se tiene, autom\u00e1ticamente se descargar\u00e1 una copia , y por tanto se requiere acceso a internet y la posibilidad de descargar ejecutables.","title":"Extraer texto de documentos"},{"location":"uso_general/","text":"Uso general Ver este ejemplo de c\u00f3mo usar la librer\u00eda. Le mostrar\u00e1 l\u00ednea por l\u00ednea el uso de las funciones principales. Cada celda viene precedida por una explicaci\u00f3n de lo que hace el c\u00f3digo de esa celda. Uso de entorno virtual Para usar banrep se recomienda hacerlo dentro de un entorno virtual. Puede ver la secci\u00f3n de instalaci\u00f3n para instrucciones sobre c\u00f3mo crearlo y activarlo. Corpus Todo proyecto de an\u00e1lisis de texto empieza por definir el corpus, conjunto de documentos, a ser analizado. Esto implica cargar el texto de cada archivo, decidir si todo el texto es relevante o si debe ser pre-procesado para excluir, por ejemplo, filas de corta longitud (t\u00edtulos, etc.). La librer\u00eda ofrece funciones y clases para cargar datos almacenados en archivos de texto ( Textos ) o en tablas tipo csv o excel ( Registros y Datos ). Lingu\u00edstica En cada texto hay que identificar frases y palabras, y definir cuales de ellas mantener para analizar y cuales filtrar. Para esto se usan filtros como listas de palabras stopwords , que por ser tan usuales no aportan mucho valor al an\u00e1lisis, o definir si solo usar palabras e ignorar n\u00fameros, s\u00edmbolos, puntuaci\u00f3n, etc. Para calcular sentimiento se suelen usar tambi\u00e9n listas de palabras predefinidas, que se asocian con diferentes emociones contrarias (positivas vs negativas, por ejemplo), y con base en conteos de presencia de esas palabras en el corpus se puede crear un indicador de sentimiento a lo largo del tiempo. Con base en estas consideraciones esta librer\u00eda ofrece la clase Documentos , que permite generar las estad\u00edsticas descriptivas y conteos de palabras requeridos en an\u00e1lisis posteriores. Es la estructura m\u00e1s importante de la librer\u00eda. Esta librer\u00eda se basa principalmente en spaCy para la implementaci\u00f3n de todo el \"pipeline\" de procesamiento de texto. Modelos LDA Los modelos de t\u00f3picos son utilizados para identificar las tem\u00e1ticas impl\u00edcitas en grandes vol\u00famenes de documentos textuales, para as\u00ed poder identificar, por ejemplo, la evoluci\u00f3n de narrativas a lo largo del tiempo, o simplemente para tener una idea de los temas tratados en el corpus sin tener que leer cado uno de sus documentos. Esta librer\u00eda usa LDA, una de m\u00faltiples t\u00e9cnicas para generar modelos de t\u00f3picos. Ver este art\u00edculo para una explicaci\u00f3n m\u00e1s detallada de la intuici\u00f3n dentr\u00e1s de estos modelos. Esta librer\u00eda usa Gensim para la implementaci\u00f3n del c\u00e1lculo de los modelos. En su documentaci\u00f3n encontrar\u00e1 todo lo necesario para correr este tipo de modelos y muchas t\u00e9cnicas adicionales no usadas en esta librer\u00eda. banrep simplemente ofrece una forma de correr varios modelos LDA y calificarlos seg\u00fan Coherence Score , todo basado en Gensim.","title":"Uso general"},{"location":"uso_general/#uso-general","text":"Ver este ejemplo de c\u00f3mo usar la librer\u00eda. Le mostrar\u00e1 l\u00ednea por l\u00ednea el uso de las funciones principales. Cada celda viene precedida por una explicaci\u00f3n de lo que hace el c\u00f3digo de esa celda. Uso de entorno virtual Para usar banrep se recomienda hacerlo dentro de un entorno virtual. Puede ver la secci\u00f3n de instalaci\u00f3n para instrucciones sobre c\u00f3mo crearlo y activarlo.","title":"Uso general"},{"location":"vinculos/","text":"V\u00ednculos de utilidad C\u00f3digo fuente El c\u00f3digo est\u00e1 disponible en este repositorio . Proyecto banrep en Python Package Index Esta es la p\u00e1gina del proyecto en PyPI . Distribuci\u00f3n de python Anaconda Ac\u00e1 puede descargar la distribuci\u00f3n Anaconda . Docs de spaCy La librer\u00eda se basa completamente en spaCy para procesamiento de texto. Docs de JupyterLab Los ejemplos de esta librer\u00eda se escriben usando JupyterLab . Apache TIKA server La extracci\u00f3n de texto hace uso de Apache Tika , una reconocida librer\u00eda de Java. Si no la tiene instalada, el m\u00f3dulo de extracci\u00f3n descarga una copia de Tika Server , y por tanto se requiere acceso a internet y la posibilidad de descargar ejecutables. Implementaci\u00f3n LDA de Gensim Los modelos de t\u00f3picos se crean usando la implementaci\u00f3n de Gensim . Explicaci\u00f3n de modelos LDA Ver este art\u00edculo para una explicaci\u00f3n m\u00e1s detallada de la intuici\u00f3n dentr\u00e1s de estos modelos.","title":"V\u00ednculos de inter\u00e9s"},{"location":"vinculos/#vinculos-de-utilidad","text":"","title":"V\u00ednculos de utilidad"}]}